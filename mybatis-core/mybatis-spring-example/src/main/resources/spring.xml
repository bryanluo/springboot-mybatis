<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--这里是扫描发现@Respository、@Service、@Component等注释-->
    <context:component-scan base-package="com.jiang.dao, com.jiang.service" />

    <!--sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!--配置映射文件-->
        <property name="mapperLocations" value="classpath*:com/jiang/dao/*.xml" />
        <property name="databaseIdProvider" ref="vendorDatabaseIdProvider" />
    </bean>


    <!--datasource-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="root" />
        <property name="password" value="123456" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/read_data" />
    </bean>


    <!--设置多数据源的情况-->
    <bean class="org.apache.ibatis.mapping.VendorDatabaseIdProvider" id="vendorDatabaseIdProvider">
        <property name="properties">
            <props>
                <prop key="SQL Server">sqlserver</prop>
                <prop key="DB2">db2</prop>
                <prop key="Oracle">oracle</prop>
                <prop key="MySQL">mysql</prop>
            </props>
        </property>
    </bean>

    <!--发现映射器-->
    <mybatis:scan base-package="com.jiang.dao" factory-ref="sqlSessionFactory" />
    <!--
        second :
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
           <property name="basePackage" value="org.mybatis.spring.sample.mapper" />
           <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        </bean>
        -->


    <!--  ========== 事务管理 =====================  -->

    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <constructor-arg ref="dataSource" />
    </bean>

    
    <!--事务控制-->
    <tx:advice id="txAdvice">
        <!--传播行为-->
        <tx:attributes>
            <!--查询设置为只读-->
            <!--NOT_SUPPORTED:不支持当前事务，如果存在事务则挂起-->
            <tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="search*" read-only="true" propagation="NOT_SUPPORTED"/>
            <tx:method name="count*" read-only="true" propagation="NOT_SUPPORTED"/>
            <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED"/>

            <!--数据变换操作-->
            <!--REQUIRED：支持当前事务，如果当前没有事务，则新建一个-->
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />

            <tx:method name="**" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* com.jiang.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
    </aop:config>

    <!--开启显示事务-->
    <tx:annotation-driven transaction-manager="transactionManager" />


</beans>